openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v1
servers:
- url: http://localhost:8080
paths:
  /api/v1/privilege:
    get:
      tags:
      - Bonus REST API operations
      parameters:
        - name: username
          in: query
          required: false
          schema:
            type: string
      summary: Get all Bonuses
      operationId: listBonuses
      responses:
        "200":
          description: All Bonuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivilegeResponse'
  /api/v1/privilege/{id}:
    get:
      tags:
      - Bonus REST API operations
      summary: Get Bonus by ID
      operationId: getBonus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Bonus for ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivilegeResponse'
        "404":
          description: Not found Bonus for ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Bonus REST API operations
      summary: Изменить значение количества бонусов
      operationId: editBonus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivilegeRequest'
        required: true
      responses:
        "200":
          description: Bonus for ID was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivilegeResponse'
        "400":
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        "404":
          description: Not found Bonus for ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/privilege_history:
    get:
      tags:
      - Bonus REST API operations
      parameters:
        - name: username
          in: query
          required: false
          schema:
            type: string
        - name: ticket_uid
          in: query
          required: false
          schema:
            type: string
      summary: Get all Bonuses
      operationId: listBonusHistory
      responses:
        "200":
          description: History for ticket
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistory'
components:
  schemas:
    ValidationErrorResponse:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    PrivilegeRequest:
      required:
      - username
      - ticket_uid
      - balance_diff
      - operationType
      type: object
      properties:
        username:
          type: string
        balance_diff:
          type: integer
          format: int32
        ticket_uid:
          type: string
          format: uuid
        operationType:
          type: string
          description: Тип операции
          enum:
            - FILL_IN_BALANCE
            - DEBIT_THE_ACCOUNT
            - FILLED_BY_MONEY
    PrivilegeResponse:
      required:
      - id
      - username
      - status
      - balance
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        status:
          type: string
          enum: ['BRONZE', 'SILVER', 'GOLD']
        balance:
          type: integer
          format: int32
    BalanceHistory:
      type: object
      example:
        {
          "date": "2021-10-08T19:59:19Z",
          "ticketUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
          "balanceDiff": 1500,
          "operationType": "FILL_IN_BALANCE"
        }
      properties:
        date:
          type: string
          description: Дата и время операции
          format: ISO 8601
        balanceDiff:
          type: integer
          format: int32
          description: Изменение баланса
        ticketUid:
          type: string
          description: UUID билета по которому была операция с бонусами
        operationType:
          type: string
          description: Тип операции
          enum:
            - FILL_IN_BALANCE
            - DEBIT_THE_ACCOUNT
            - FILLED_BY_MONEY
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
